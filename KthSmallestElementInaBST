/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
         stack<TreeNode*> stk;
        TreeNode* cur = root;
        
        do{
            while(cur){
                stk.push(cur);
                cur = cur->left;
            }

            cur = stk.top(); stk.pop();

            if(--k == 0) return cur->val;
            // cout << cur->val << " ";
            cur = cur->right;
            
        //when stk not empty or cur not null, we should continue the loop
        }while(!stk.empty() || cur);
        // cout << endl;
        
        return -1;
        
    }
};
